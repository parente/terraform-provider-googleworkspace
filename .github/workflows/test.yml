# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - "README.md"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest

  generate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - "1.12.*"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: true
      - name: Check out code into the Go module directory
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2 # v4.0.0
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      # TODO: run unittests only for now
      - run: make test
      # - env:
      #     TF_ACC: "1"
      #   run: go test -v -cover ./internal/provider/
      #   timeout-minutes: 10

      # TODO: port acceptance test fixtures
      # - name: Get credentials
      #   id: vault
      #   uses: hashicorp/vault-action@v3.3.0
      #   with:
      #     url: ${{ secrets.VAULT_ADDR }}
      #     method: approle
      #     roleId: ${{ secrets.ROLE_ID }}
      #     secretId: ${{ secrets.SECRET_ID }}
      #     tlsSkipVerify: true
      #     exportEnv: false
      #     namespace: admin/tpgw
      #     secrets: |
      #       gcp/key/tf-acctest private_key_data

      # - name: Pre-sweep lingering resources
      #   timeout-minutes: 10
      #   env:
      #     GOOGLEWORKSPACE_CUSTOMER_ID: ${{ secrets.GOOGLEWORKSPACE_CUSTOMER_ID }}
      #     GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL: ${{ secrets.GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL }}

      #   run: |
      #     export GOOGLEWORKSPACE_CREDENTIALS=$(echo -n ${{ steps.vault.outputs.private_key_data }} | base64 --decode)
      #     go test ./internal/provider -v -sweep=us-central1 -sweep-run= -timeout 60m

      # - name: TF acceptance tests
      #   timeout-minutes: 120
      #   env:
      #     TF_ACC: "1"
      #     TF_LOG: "DEBUG"
      #     TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}

      #     # Set whatever additional acceptance test env vars here. You can
      #     # optionally use data from your repository secrets using the
      #     # following syntax:
      #     # SOME_VAR: ${{ secrets.SOME_VAR }}

      #     GOOGLEWORKSPACE_CUSTOMER_ID: ${{ secrets.GOOGLEWORKSPACE_CUSTOMER_ID }}
      #     GOOGLEWORKSPACE_DOMAIN: ${{ secrets.GOOGLEWORKSPACE_DOMAIN }}
      #     GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL: ${{ secrets.GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL }}
      #     GOOGLEWORKSPACE_IMPERSONATED_SERVICE_ACCOUNT: ${{ secrets.GOOGLEWORKSPACE_IMPERSONATED_SERVICE_ACCOUNT }}

      #   run: |
      #     export GOOGLEWORKSPACE_CREDENTIALS=$(echo -n ${{ steps.vault.outputs.private_key_data }} | base64 --decode)
      #     go test -v -cover ./internal/provider/ -timeout 120m

      # - name: Post-sweep lingering resources
      #   timeout-minutes: 10
      #   env:
      #     GOOGLEWORKSPACE_CUSTOMER_ID: ${{ secrets.GOOGLEWORKSPACE_CUSTOMER_ID }}
      #     GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL: ${{ secrets.GOOGLEWORKSPACE_IMPERSONATED_USER_EMAIL }}

      #   run: |
      #     export GOOGLEWORKSPACE_CREDENTIALS=$(echo -n ${{ steps.vault.outputs.private_key_data }} | base64 --decode)
      #     go test ./internal/provider -v -sweep=us-central1 -sweep-run= -timeout 60m
